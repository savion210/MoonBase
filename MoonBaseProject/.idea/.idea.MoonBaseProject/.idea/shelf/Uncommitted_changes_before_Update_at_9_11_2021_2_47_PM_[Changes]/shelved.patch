Index: Assets/Scripts/ObjectiveManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Net;\r\nusing TMPro;\r\nusing UnityEditor;\r\nusing UnityEngine;\r\nusing UnityEngine.UI;\r\n\r\npublic class ObjectiveManager : MonoBehaviour\r\n{\r\n    private ObjectiveManager Instance = null;\r\n    private Objective[] allObjectives = null;\r\n    [SerializeField] private GameObject objectiveListPanel = null;\r\n    [SerializeField] private TextMeshProUGUI objectiveText = null;\r\n\r\n    [Header(\"Chet Console\")]\r\n    [SerializeField] private GameObject chetConsole = null;\r\n    [SerializeField] private TMP_InputField input = null;\r\n    [SerializeField] private Button enterButton;\r\n    [SerializeField] private SC_FPSController playerController;\r\n\r\n    // Start is called before the first frame update\r\n    private void Awake()\r\n    {\r\n        if (Instance is null) Instance = this;\r\n        allObjectives = Resources.LoadAll<Objective>(\"Data/Objectives\");\r\n        chetConsole.SetActive(false);\r\n    }\r\n\r\n    private void Start()\r\n    {\r\n        if (objectiveListPanel != null)\r\n        {\r\n            for (int i = 0; i < allObjectives.Length; i++)\r\n            {\r\n                var thisObj = Instantiate(objectiveText, objectiveListPanel.transform);\r\n                thisObj.text = allObjectives[i].name;\r\n                thisObj.name = allObjectives[i].objectiveName;\r\n                thisObj.fontSize = 12f;\r\n            }\r\n        }\r\n        \r\n        if(enterButton != null)\r\n            enterButton.onClick.AddListener(() => SetObjectiveStatus(input.text, true));\r\n    }\r\n\r\n    public void SetObjectiveStatus(string objectiveName, bool status)\r\n    {\r\n        foreach (var t in allObjectives)\r\n        {\r\n            if (t.objectiveName == objectiveName)\r\n                t.objectiveStatus = status;\r\n            for (int i = 0; i < objectiveListPanel.transform.childCount; i++)\r\n            {\r\n                if (objectiveListPanel.transform.GetChild(i).name == t.objectiveName)\r\n                    objectiveListPanel.transform.GetChild(i).GetComponent<TextMeshProUGUI>().fontStyle =\r\n                        FontStyles.Strikethrough;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void Update()\r\n    {\r\n        if (Input.GetKeyUp(KeyCode.KeypadEnter))\r\n        {\r\n            chetConsole.SetActive(true);\r\n            Cursor.lockState = CursorLockMode.None;\r\n            Cursor.visible = true;\r\n        }\r\n        \r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Assets/Scripts/ObjectiveManager.cs b/Assets/Scripts/ObjectiveManager.cs
--- a/Assets/Scripts/ObjectiveManager.cs	(revision a0b79c5f51ef5700f2b07242532820fcc7722156)
+++ b/Assets/Scripts/ObjectiveManager.cs	(date 1631385955717)
@@ -19,13 +19,16 @@
     [SerializeField] private GameObject chetConsole = null;
     [SerializeField] private TMP_InputField input = null;
     [SerializeField] private Button enterButton;
-    [SerializeField] private SC_FPSController playerController;
 
     // Start is called before the first frame update
     private void Awake()
     {
         if (Instance is null) Instance = this;
         allObjectives = Resources.LoadAll<Objective>("Data/Objectives");
+        for (int i = 0; i < allObjectives.Length; i++)
+        {
+            allObjectives[i].objectiveStatus = false;
+        }
         chetConsole.SetActive(false);
     }
 
Index: UserSettings/EditorUserSettings.asset
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%YAML 1.1\r\n%TAG !u! tag:unity3d.com,2011:\r\n--- !u!162 &1\r\nEditorUserSettings:\r\n  m_ObjectHideFlags: 0\r\n  serializedVersion: 4\r\n  m_ConfigSettings:\r\n    RecentlyUsedScenePath-0:\r\n      value: 22424703114646680e0b0227036c6c111b07142f1f2b233e2867083debf42d\r\n      flags: 0\r\n    vcSharedLogLevel:\r\n      value: 0d5e400f0650\r\n      flags: 0\r\n  m_VCAutomaticAdd: 1\r\n  m_VCDebugCom: 0\r\n  m_VCDebugCmd: 0\r\n  m_VCDebugOut: 0\r\n  m_SemanticMergeMode: 2\r\n  m_VCShowFailedCheckout: 1\r\n  m_VCOverwriteFailedCheckoutAssets: 1\r\n  m_VCProjectOverlayIcons: 1\r\n  m_VCHierarchyOverlayIcons: 1\r\n  m_VCOtherOverlayIcons: 1\r\n  m_VCAllowAsyncUpdate: 1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UserSettings/EditorUserSettings.asset b/UserSettings/EditorUserSettings.asset
--- a/UserSettings/EditorUserSettings.asset	(revision a0b79c5f51ef5700f2b07242532820fcc7722156)
+++ b/UserSettings/EditorUserSettings.asset	(date 1631366915319)
@@ -8,6 +8,12 @@
     RecentlyUsedScenePath-0:
       value: 22424703114646680e0b0227036c6c111b07142f1f2b233e2867083debf42d
       flags: 0
+    RecentlyUsedScenePath-1:
+      value: 22424703114646680e1c05320430103626243b25223c343f21251821add3373dece225a6d33f2c280a01ea3201701431fb1e10
+      flags: 0
+    RecentlyUsedScenePath-2:
+      value: 22424703114646680e1c05320430103626243b25223c343f21251821add3373dece225a6d33f2c280a01ea3201012b71e704001fef
+      flags: 0
     vcSharedLogLevel:
       value: 0d5e400f0650
       flags: 0
